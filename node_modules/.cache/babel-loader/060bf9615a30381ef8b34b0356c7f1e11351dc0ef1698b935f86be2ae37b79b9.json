{"ast":null,"code":"var _jsxFileName = \"/Users/johnnychen/Coding/maritime_translator/src/MaritimeTranslator.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Card, CardContent } from \"./components/ui/card.js\";\nimport { Button } from \"./components/ui/button.js\";\nimport { Input } from \"./components/ui/input.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://script.google.com/macros/s/AKfycbyS6WZdHmwvWGZ-yI7GlXI3XSwNex1RzcZudVpk9hRNkGJYt_EIN7jfRoSnEaXkSfOC/exec\";\nexport default function MaritimeTranslator() {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [newEnglish, setNewEnglish] = useState(\"\");\n  const [newChinese, setNewChinese] = useState(\"\");\n\n  // Fetch existing translations from Google Sheets API\n  useEffect(() => {\n    fetch(API_URL).then(response => response.json()).then(data => {\n      setEntries(data.map(row => ({\n        english: row[0],\n        chinese: row[1]\n      })));\n    }).catch(error => console.error(\"Fetch error:\", error));\n  }, []);\n\n  // Function to add a new entry\n  const addEntry = () => {\n    if (newEnglish.trim() && newChinese.trim()) {\n      fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          english: newEnglish,\n          chinese: newChinese\n        })\n      }).then(() => {\n        setEntries([...entries, {\n          english: newEnglish,\n          chinese: newChinese\n        }]);\n        setNewEnglish(\"\");\n        setNewChinese(\"\");\n      }).catch(error => console.error(\"Error adding entry:\", error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 w-full max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Maritime Translator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter English term\",\n        value: newEnglish,\n        onChange: e => setNewEnglish(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Chinese translation\",\n        value: newChinese,\n        onChange: e => setNewChinese(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addEntry,\n        children: \"Add Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Chinese\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), entries.map((entry, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border p-2 rounded-md\",\n              children: entry.english\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border p-2 rounded-md\",\n              children: entry.chinese\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(MaritimeTranslator, \"DN1FvM7YJsK6HDsQDfFv3MUmrm0=\");\n_c = MaritimeTranslator;\nvar _c;\n$RefreshReg$(_c, \"MaritimeTranslator\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Button","Input","jsxDEV","_jsxDEV","API_URL","MaritimeTranslator","_s","entries","setEntries","newEnglish","setNewEnglish","newChinese","setNewChinese","fetch","then","response","json","data","map","row","english","chinese","catch","error","console","addEntry","trim","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","entry","index","Fragment","_c","$RefreshReg$"],"sources":["/Users/johnnychen/Coding/maritime_translator/src/MaritimeTranslator.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Card, CardContent } from \"./components/ui/card.js\";\nimport { Button } from \"./components/ui/button.js\";\nimport { Input } from \"./components/ui/input.js\";\n\n\nconst API_URL = \"https://script.google.com/macros/s/AKfycbyS6WZdHmwvWGZ-yI7GlXI3XSwNex1RzcZudVpk9hRNkGJYt_EIN7jfRoSnEaXkSfOC/exec\";\n\nexport default function MaritimeTranslator() {\n    const [entries, setEntries] = useState([]);\n    const [newEnglish, setNewEnglish] = useState(\"\");\n    const [newChinese, setNewChinese] = useState(\"\");\n\n    // Fetch existing translations from Google Sheets API\n    useEffect(() => {\n        fetch(API_URL)\n            .then(response => response.json())\n            .then(data => {\n                setEntries(data.map(row => ({ english: row[0], chinese: row[1] })));\n            })\n            .catch(error => console.error(\"Fetch error:\", error));\n    }, []);\n\n    // Function to add a new entry\n    const addEntry = () => {\n        if (newEnglish.trim() && newChinese.trim()) {\n            fetch(API_URL, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ english: newEnglish, chinese: newChinese })\n            })\n                .then(() => {\n                    setEntries([...entries, { english: newEnglish, chinese: newChinese }]);\n                    setNewEnglish(\"\");\n                    setNewChinese(\"\");\n                })\n                .catch(error => console.error(\"Error adding entry:\", error));\n        }\n    };\n\n    return (\n        <div className=\"p-4 w-full max-w-2xl mx-auto\">\n            <h1 className=\"text-2xl font-bold mb-4\">Maritime Translator</h1>\n\n            <div className=\"flex space-x-2 mb-4\">\n                <Input\n                    placeholder=\"Enter English term\"\n                    value={newEnglish}\n                    onChange={(e) => setNewEnglish(e.target.value)}\n                />\n                <Input\n                    placeholder=\"Enter Chinese translation\"\n                    value={newChinese}\n                    onChange={(e) => setNewChinese(e.target.value)}\n                />\n                <Button onClick={addEntry}>Add Entry</Button>\n            </div>\n\n            <Card>\n                <CardContent className=\"p-4\">\n                    <div className=\"grid grid-cols-2 gap-2\">\n                        <strong>English</strong>\n                        <strong>Chinese</strong>\n                        {entries.map((entry, index) => (\n                            <React.Fragment key={index}>\n                                <div className=\"border p-2 rounded-md\">\n                                    {entry.english}\n                                </div>\n                                <div className=\"border p-2 rounded-md\">\n                                    {entry.chinese}\n                                </div>\n                            </React.Fragment>\n                        ))}\n\n                    </div>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}