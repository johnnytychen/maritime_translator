{"ast":null,"code":"var _jsxFileName = \"/Users/johnnychen/Coding/maritime_translator/src/MaritimeTranslator.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Card, CardContent } from \"./components/ui/card.js\";\nimport { Button } from \"./components/ui/button.js\";\nimport { Input } from \"./components/ui/input.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://script.google.com/macros/s/AKfycbyS6WZdHmwvWGZ-yI7GlXI3XSwNex1RzcZudVpk9hRNkGJYt_EIN7jfRoSnEaXkSfOC/exec\";\nexport default function MaritimeTranslator() {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [newEnglish, setNewEnglish] = useState(\"\");\n  const [newChinese, setNewChinese] = useState(\"\");\n\n  // Fetch existing translations from Google Sheets API\n  useEffect(() => {\n    fetch(API_URL).then(response => response.json()).then(data => {\n      setEntries(data.map(row => ({\n        english: row[0],\n        chinese: row[1]\n      })));\n    }).catch(error => console.error(\"Fetch error:\", error));\n  }, []);\n\n  // Function to add a new entry\n  const addEntry = async () => {\n    if (newEnglish.trim() && newChinese.trim()) {\n      console.log(\"Sending data:\", {\n        english: newEnglish,\n        chinese: newChinese\n      });\n      try {\n        const response = await fetch(API_URL, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            english: newEnglish,\n            chinese: newChinese\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Server error: ${response.status}`);\n        }\n        console.log(\"Entry added successfully!\");\n        setEntries(prevEntries => [...prevEntries, {\n          english: newEnglish,\n          chinese: newChinese\n        }]);\n        setNewEnglish(\"\");\n        setNewChinese(\"\");\n      } catch (error) {\n        console.error(\"Error adding entry:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 w-full max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Maritime Translator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter English term\",\n        value: newEnglish,\n        onChange: e => setNewEnglish(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Chinese translation\",\n        value: newChinese,\n        onChange: e => setNewChinese(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addEntry,\n        children: \"Add Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Chinese\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), entries.map((entry, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border p-2 rounded-md\",\n              children: entry.english\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border p-2 rounded-md\",\n              children: entry.chinese\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(MaritimeTranslator, \"DN1FvM7YJsK6HDsQDfFv3MUmrm0=\");\n_c = MaritimeTranslator;\nvar _c;\n$RefreshReg$(_c, \"MaritimeTranslator\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Button","Input","jsxDEV","_jsxDEV","API_URL","MaritimeTranslator","_s","entries","setEntries","newEnglish","setNewEnglish","newChinese","setNewChinese","fetch","then","response","json","data","map","row","english","chinese","catch","error","console","addEntry","trim","log","method","headers","body","JSON","stringify","ok","Error","status","prevEntries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","entry","index","Fragment","_c","$RefreshReg$"],"sources":["/Users/johnnychen/Coding/maritime_translator/src/MaritimeTranslator.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Card, CardContent } from \"./components/ui/card.js\";\nimport { Button } from \"./components/ui/button.js\";\nimport { Input } from \"./components/ui/input.js\";\n\n\nconst API_URL = \"https://script.google.com/macros/s/AKfycbyS6WZdHmwvWGZ-yI7GlXI3XSwNex1RzcZudVpk9hRNkGJYt_EIN7jfRoSnEaXkSfOC/exec\";\n\nexport default function MaritimeTranslator() {\n    const [entries, setEntries] = useState([]);\n    const [newEnglish, setNewEnglish] = useState(\"\");\n    const [newChinese, setNewChinese] = useState(\"\");\n\n    // Fetch existing translations from Google Sheets API\n    useEffect(() => {\n        fetch(API_URL)\n            .then(response => response.json())\n            .then(data => {\n                setEntries(data.map(row => ({ english: row[0], chinese: row[1] })));\n            })\n            .catch(error => console.error(\"Fetch error:\", error));\n    }, []);\n\n    // Function to add a new entry\n    const addEntry = async () => {\n        if (newEnglish.trim() && newChinese.trim()) {\n            console.log(\"Sending data:\", { english: newEnglish, chinese: newChinese });\n\n            try {\n                const response = await fetch(API_URL, {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ english: newEnglish, chinese: newChinese })\n                });\n\n                if (!response.ok) {\n                    throw new Error(`Server error: ${response.status}`);\n                }\n\n                console.log(\"Entry added successfully!\");\n\n                setEntries(prevEntries => [...prevEntries, { english: newEnglish, chinese: newChinese }]);\n                setNewEnglish(\"\");\n                setNewChinese(\"\");\n            } catch (error) {\n                console.error(\"Error adding entry:\", error);\n            }\n        }\n    };\n\n\n    return (\n        <div className=\"p-4 w-full max-w-2xl mx-auto\">\n            <h1 className=\"text-2xl font-bold mb-4\">Maritime Translator</h1>\n\n            <div className=\"flex space-x-2 mb-4\">\n                <Input\n                    placeholder=\"Enter English term\"\n                    value={newEnglish}\n                    onChange={(e) => setNewEnglish(e.target.value)}\n                />\n                <Input\n                    placeholder=\"Enter Chinese translation\"\n                    value={newChinese}\n                    onChange={(e) => setNewChinese(e.target.value)}\n                />\n                <Button onClick={addEntry}>Add Entry</Button>\n            </div>\n\n            <Card>\n                <CardContent className=\"p-4\">\n                    <div className=\"grid grid-cols-2 gap-2\">\n                        <strong>English</strong>\n                        <strong>Chinese</strong>\n                        {entries.map((entry, index) => (\n                            <React.Fragment key={index}>\n                                <div className=\"border p-2 rounded-md\">\n                                    {entry.english}\n                                </div>\n                                <div className=\"border p-2 rounded-md\">\n                                    {entry.chinese}\n                                </div>\n                            </React.Fragment>\n                        ))}\n\n                    </div>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}